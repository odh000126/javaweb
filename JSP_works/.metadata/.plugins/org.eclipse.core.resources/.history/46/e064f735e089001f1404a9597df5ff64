package dao;

import java.util.ArrayList;
import dto.Book;


public class BookRepository{
	
	private static BookRepository instance = new BookRepository();

	public static BookRepository getInstance(){
		return instance;
	} 
	
	private ArrayList<Book> listOfBooks = new ArrayList<Book>();
	
	public BookRepository() {
	
		Book book1= new Book("9791156640448","IT CookBook, 난생처음 인공지능 입문(2판)", 40044);
		book1.setAuthor("서지영");
		book1.setDescription("누구나 쉽게 배울 수 있는 인공지능 입문서 with 챗GPT 이 책은 IT 비전공자뿐만 아니라 중고등학생도 쉽게 배울 수 있는 인공지능 입문서입니다. 인공지능의 개념을 실생활에서 접할 수 있는 사례를 중심으로 재미있는 삽화와 생생한 이미지를 통해 친절하게 설명합니다. 그리고 인공지능을 구현하기 위해 필요한 기술인 GPU, 5G, 클라우드, 사물인터넷, 빅데이터, 머신러닝, 인공신경망, 딥러닝 등을 자세히 알아봅니다. 또한 현재 구현되고 있는 인공지능 플랫폼과 서비스를 살펴보면서 미래에 인간이 인공지능에 어떻게 대처할 것인지 배워봅니다. 특별히 이번 개정에서는 챗GPT를 포함한 생성형 AI에 대한 개념을 학습하고 다양한 방법으로 인공지능을 실습할 수 있도록 구성하였습니다. 이 책을 끝까지 읽는다면 막연하기만 했던 인공지능을 누구나 쉽게 이해할 수 있을 것입니다.");
		book1.setPublisher("한빛아카데미");
		book1.setCategory("인공지능");
		book1.setUnitsInStock(1000);	
		book1.setReleaseDate("2024-10-07");
		book1.setFilename("9791156640448.jpg");
		
		
		Book book2 = new Book("9791156640400","STEM CookBook, 수학으로 만드는 기초 AI", 40040);
		book2.setAuthor("신재민");
		book2.setDescription("자바를 처음 배우는 학생을 위해 자바의 기본 개념과 실습 예제를 그림을 이용하여 쉽게 설명합니다. 자바의 이론적 개념→기본 예제→프로젝트 순으로 단계별 학습이 가능하며, 각 챕터의 프로젝트를 실습하면서 온라인 서점을 완성할 수 있도록 구성하였습니다.");
		book2.setPublisher("한빛아카데미");
		book2.setCategory("IT모바일");
		book2.setUnitsInStock(1000);		
		book2.setReleaseDate("2023/01/01");
		book2.setFilename("ISBN1235.jpg");
		
		Book book3= new Book("ISBN1236","파이썬 프로그래밍", 30000);
		book3.setAuthor("최성철");
		book3.setDescription(" 파이썬으로 프로그래밍을 시작하는 입문자가 쉽게 이해할 수 있도록 기본 개념을 상세하게 설명하며, 다양한 예제를 제시합니다. 또한 프로그래밍의 기초 원리를 이해하면서 파이썬으로 데이터를 처리하는 기법도 배웁니다.");
		book3.setPublisher("한빛아카데미");
		book3.setCategory("IT모바일");
		book3.setUnitsInStock(1000);	
		book3.setReleaseDate("2023/01/01");
		book3.setFilename("ISBN1236.jpg");
		
		
		listOfBooks.add(book1);
		listOfBooks.add(book2);
		listOfBooks.add(book3);
		
		
	}
	public ArrayList<Book> getAllBooks() {
		return listOfBooks;
	}
	
	public Book getBookById(String bookId) {
		Book bookById = null;

		for (int i = 0; i < listOfBooks.size(); i++) {
			Book book = listOfBooks.get(i);
			if (book != null && book.getBookId() != null && book.getBookId().equals(bookId)) {
				
				bookById = book;
				break;
			}
		}
		return bookById;
	}
	
	public void addBook(Book book) {
		listOfBooks.add(book);
	}

}
